{
  "author": {
    "name": "Michael De Lorenzo",
    "email": "michael@delorenzodesign.com",
    "url": "http://mikedelorenzo.com"
  },
  "name": "keyword-extractor",
  "description": "Module for creating a keyword array from a string and excluding stop words.",
  "keywords": [
    "text",
    "keyword",
    "search",
    "extract"
  ],
  "version": "0.0.7",
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/michaeldelorenzo/keyword-extractor/raw/master/LICENSE"
    }
  ],
  "homepage": "https://github.com/michaeldelorenzo/keyword-extractor",
  "repository": {
    "type": "git",
    "url": "git://github.com/michaeldelorenzo/keyword-extractor.git"
  },
  "bugs": {
    "url": "https://github.com/michaeldelorenzo/keyword-extractor/issues"
  },
  "main": "./index",
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "dependencies": {
    "underscore": "1.4.4",
    "underscore.string": "2.3.0"
  },
  "engines": {
    "node": "node >= 0.10.0"
  },
  "readme": "#Keyword Extractor\n\nA simple [NPM package](https://npmjs.org/package/keyword-extractor) for extracting _keywords_ from a string by\nremoving stopwords.\n\n## Installation\n\n```sh\n$ npm install keyword-extractor\n```\n\n## Running tests\n\nTo run the test suite, first install the development dependencies by running the following command within the package's\ndirectory.\n\n```sh\n$ npm install\n```\n\nTo execute the package's tests, run:\n\n``` sh\n$ make test\n```\n\n##Usage of the Module\n\n```javascript\n//  include the Keyword Extractor\nvar keyword_extractor = require(\"keyword-extractor\");\n\n//  Opening sentence to NY Times Article at\n//  http://www.nytimes.com/2013/09/10/world/middleeast/surprise-russian-proposal-catches-obama-between-putin-and-house-republicans.html\nvar sentence = \"President Obama woke up Monday facing a Congressional defeat that many in both parties believed could hobble his presidency.\"\n\n//  Extract the keywords\nvar extraction_result = keyword_extractor.extract(sentence,{\n                                                                language:\"english\",\n                                                                return_changed_case:true\n                                                           });\n\n/*\n  extraction result is:\n\n  [\n        \"president\",\n        \"obama\",\n        \"woke\",\n        \"monday\",\n        \"facing\",\n        \"congressional\",\n        \"defeat\",\n        \"parties\",\n        \"believed\",\n        \"hobble\",\n        \"presidency\"\n    ]\n*/\n```\n\n###Options Parameters\n\nThe second argument of the _extract_ method is an Object of configuration/processing settings for the extraction.\n\nParameter Name | Description | Permitted Values\n---------------|-------------|-----------------\nlanguage       | The stopwords list to use. | _english_ or _spanish_\nreturn_changed_case | The case of the extracted keywords. Setting the value to _true_ will return the results all lower-cased, if _false_ the results will be in the original case. | _true_ or _false_\n\n## Credits\n\nThe initial stopwords lists are taken from the following sources:\n\n- English [http://jmlr.org/papers/volume5/lewis04a/a11-smart-stop-list/english.stop]\n- Spanish [https://stop-words.googlecode.com/svn/trunk/stop-words/stop-words/stop-words-spanish.txt]\n",
  "readmeFilename": "README.md",
  "_id": "keyword-extractor@0.0.7",
  "dist": {
    "shasum": "3baa7cad96a208ee4a7b3915ad50feae8771ccce",
    "tarball": "http://registry.npmjs.org/keyword-extractor/-/keyword-extractor-0.0.7.tgz"
  },
  "_from": "keyword-extractor@",
  "_npmVersion": "1.2.11",
  "_npmUser": {
    "name": "mikedelorenzo",
    "email": "michael@delorenzodesign.com"
  },
  "maintainers": [
    {
      "name": "mikedelorenzo",
      "email": "michael@delorenzodesign.com"
    }
  ],
  "directories": {},
  "_shasum": "3baa7cad96a208ee4a7b3915ad50feae8771ccce",
  "_resolved": "https://registry.npmjs.org/keyword-extractor/-/keyword-extractor-0.0.7.tgz"
}
